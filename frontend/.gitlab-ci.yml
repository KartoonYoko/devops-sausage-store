include: 
  - template: Security/SAST.gitlab-ci.yml

stages:
  - build
  - test
  - release
  - deploy
  - notify

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}
  NEXUS_REPO_ARTIFACT_URL: https://nexus.k8s.praktikum-services.tech/repository/sausage-store-vtulkin-vladislav-frontend/sausage-store-front/sausage-store/${VERSION}/sausage-store-${VERSION}.tar.gz

build-frontend-code-job:
  stage: build  
  only:
    changes:
    - frontend/*
  script:        
    - cd frontend
    - npm install
    - npm run build
  artifacts:
    paths:
      - frontend/dist/frontend
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - .npm/

upload-frontend-release:
  stage: release
  only:
    changes:
    - frontend/**/*
  needs:
    - build-frontend-code-job
  script:
    - cd frontend/dist
    - tar czvf sausage-store-${VERSION}.tar.gz frontend
    - curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}" --upload-file sausage-store-${VERSION}.tar.gz ${NEXUS_REPO_URL_FRONTEND}/sausage-store-front/sausage-store/${VERSION}/sausage-store-${VERSION}.tar.gz 

telegram-notification-frontend:
  stage: notify
  only:
    variables:
    - $CI_COMMIT_MESSAGE =~ /send notification/
    changes:
    - frontend/*
  script:
    - curl -X POST -H 'Content-type:application/json' --data "{\"chat_id\":\"-1001657575944\", \"text\":\"Вышла новая версия фронтенда сосисочной — ${VERSION}. Скачать фронт можно по ссылке — ${NEXUS_REPO_ARTIFACT_URL}\"}" https://api.telegram.org/bot$TELEGRAM_NOTIFICATION_TOKEN/sendMessage
  needs:
    - upload-frontend-release

sonarqube-frontend-sast:
  stage: test
  only:
    changes:
    - frontend/*
  needs:
    - job: build-frontend-code-job
      artifacts: true
  image: sonarsource/sonar-scanner-cli:latest
  script:
    - cd frontend
    - >
      sonar-scanner
      -Dsonar.projectName="${SONAR_PROJECT_KEY_FRONTEND}"
      -Dsonar.projectKey=${SONAR_PROJECT_KEY_FRONTEND}
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_LOGIN_FRONTEND} 
# изменения в коде
deploy:
  stage: deploy
  environment:
    name: staging-frontend
    url: http://std-016-32.praktikum-services.tech
  rules:
    - when: manual
  needs: 
    - upload-frontend-release
  before_script:
    #устанавливаем ssh-agent для удобства аутентификации по ssh
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    #сохраняем сгенеренный ранее приватный ключ для раннера
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 600 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - scp ./frontend/sausage-store-frontend.service ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/sausage-store-frontend.service
    - ssh ${DEV_USER}@${DEV_HOST} "export "CURRENT_VERSION=${VERSION}"; export "VERSION=${VERSION}"; export "DEV_HOST=${DEV_HOST}";export "NEXUS_REPO_ARTIFACT_URL=${NEXUS_REPO_ARTIFACT_URL}"; export "NEXUS_REPO_USER=${NEXUS_REPO_USER}"; export "NEXUS_REPO_PASS=${NEXUS_REPO_PASS}";setsid /bin/bash -s " < ./frontend/deploy.sh 

