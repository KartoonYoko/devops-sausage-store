stages:
  - build
  - test
  - release
  - notify

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}
  MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository
  NEXUS_REPO_ARTIFACT_URL_BACK: https://nexus.k8s.praktikum-services.tech/repository/sausage-store-vtulkin-vladislav-backend/com/yandex/practicum/devops/sausage-store/${VERSION}/sausage-store-${VERSION}.jar

build-backend-code-job:
  stage: build  
  only:
    changes:
    - backend/*
  script:
    - cd backend
    - mvn package -Dversion.application=${VERSION} -Dmaven.repo.local=${MAVEN_REPO_PATH}
  artifacts:
    paths:
      - backend/target/sausage-store-$VERSION.jar
      - ${CI_PROJECT_DIR}/.m2
  cache:
    paths:
      - $MAVEN_REPO_PATH

upload-backend-release:
  stage: release
  only:
    changes:
      - backend/**/*
  needs:
    - build-backend-code-job
  script:
    - cd backend
    - mvn -Dmaven.repo.local=$MAVEN_REPO_PATH -s settings.xml -Dversion.application=$VERSION -DskipTests deploy 

telegram-notification-backend:
  stage: notify
  only:
    variables:
    - $CI_COMMIT_MESSAGE =~ /send notification/
    changes:
    - backend/*
  script:
    # - curl -X POST -H 'Content-type:application/json' --data "{\"chat_id\":\"-1001657575944\", \"text\":\"Вышла новая версия бекенда сосисочной — $VERSION. Скачать бекенд можно по ссылке — $CI_API_V4_URL/projects/$CI_PROJECT_ID/jobs/artifacts/$CI_COMMIT_BRANCH/download?job=build-backend-code-job\"}" https://api.telegram.org/bot$TELEGRAM_NOTIFICATION_TOKEN/sendMessage
    - curl -X POST -H 'Content-type:application/json' --data "{\"chat_id\":\"-1001657575944\", \"text\":\"Вышла новая версия бекенда сосисочной — ${VERSION}. Скачать бекенд можно по ссылке — ${NEXUS_REPO_ARTIFACT_URL_BACK}\"}" https://api.telegram.org/bot$TELEGRAM_NOTIFICATION_TOKEN/sendMessage
  needs:
    - upload-backend-release

spotbugs-sast:
  rules:
    changes:
    - backend/*
  needs:
    - build-backend-code-job
  variables:
    COMPILE: "false"
    SAST_JAVA_VERSION: 11
    MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository

sonarqube-backend-sast:
  stage: test
  only:
    changes:
    - backend/*
  needs:
    - job: build-backend-code-job
      artifacts: true
  image: maven:3.8-openjdk-16 # тот самый docker-образ, о котором мы все узнаем в будущем
  script:
    - cd backend
    - >
      mvn verify sonar:sonar -Dsonar.qualitygate.wait=true 
      -Dsonar.projectName="${SONAR_PROJECT_KEY_BACKEND}"
      -Dsonar.projectKey=${SONAR_PROJECT_KEY_BACKEND} 
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_LOGIN_BACKEND}

